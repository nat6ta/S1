import streamlit as st
import pandas as pd
import numpy as np
import pickle
import plotly.express as px

html_21="""
<div style="background-color: #E7CE5B ;padding:15px;border-radius:15px 15px 15px 15px;border-style:'solid';border-color:black">
 <center><h3>‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</h3></center>
</div>
"""
st.image('./pic/ban21.png')
st.markdown(html_21,unsafe_allow_html=True)
st.markdown("")
st.markdown("")
st.sidebar.markdown("# ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• ")

   
def radar_chart(val1,val2,val3,val4,val5):
    df=pd.DataFrame(dict(
        r=[val1,val2,val3,val4,val5],
        theta=["‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà1","‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà2","‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà3","‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà4","‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà5"]))
    fig=px.line_polar(df,r='r',theta='theta',line_close=True)
    st.write(fig)


df = pd.DataFrame(
    np.random.randn(10, 5),
    columns=('col %d' % i for i in range(5))
)

html_22="""
<div style="background-color: #E7CE5B ;padding:10px;border-radius:10px 10px 10px 10px;border-style:'solid';border-color:black">
<h5>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• </h5>
</div>
"""
st.markdown(html_22,unsafe_allow_html=True)
if st.button("‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥"):
   st.write(df.describe())
   st.button("‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
else:
    st.write("‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

html_23="""
<div style="background-color: #E7CE5B ;padding:10px;border-radius:10px 10px 10px 10px;border-style:'solid';border-color:black">
<h5>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• </h5>
</div>
"""
st.markdown(html_23,unsafe_allow_html=True)
if st.button("‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"):
   st.write(df.head(20))
   st.button("‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
else:
    st.write("‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

#st.table(df)
html_24="""
<div style="background-color: #E7CE5B ;padding:10px;border-radius:10px 10px 10px 10px;border-style:'solid';border-color:black">
<h5>‡∏Å‡∏≤‡∏£‡∏à‡∏¥‡∏ô‡∏ï‡∏ó‡∏±‡∏®‡∏ô‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• </h5>
</div>
"""
st.markdown(html_24,unsafe_allow_html=True)
if st.button("‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏¥‡∏ô‡∏ï‡∏ó‡∏±‡∏®‡∏ô‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"):
   st.write(df.head(20))
   st.bar_chart(df)
   st.button("‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
else:
    st.write("‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

st.subheader("‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏î‡πâ‡∏≤‡∏ô AI ‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• 5 ‡∏î‡πâ‡∏≤‡∏ô")

options1 = st.multiselect(
     '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏¢‡∏∏',
     ['6', '7', '8','9', '10', '11','12'])
st.write('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ', options1)

options2 = st.multiselect(
     '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á [1:1‡∏Ñ‡∏ô, 2:2‡∏Ñ‡∏ô, 3:3‡∏Ñ‡∏ô,4:‡∏≠‡∏∑‡πà‡∏ô‡πÜ]',
     ['1', '2', '3','4'])
st.write('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ ', options2)

options3 = st.multiselect(
     '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏∏‡∏ï‡∏£‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà [1:1‡∏Ñ‡∏ô, 2:2‡∏Ñ‡∏ô, 3:3‡∏Ñ‡∏ô,4:‡∏≠‡∏∑‡πà‡∏ô‡πÜ]',
     ['1', '2', '3','4'])
st.write('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ ', options3)

options4 = st.multiselect(
     '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏¥‡∏î‡∏≤‡∏°‡∏≤‡∏£‡∏î‡∏≤ [1:‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô, 2:‡∏´‡∏¢‡πà‡∏≤‡∏£‡πâ‡∏≤‡∏á, 3:‡∏ö‡∏¥‡∏î‡∏≤‡πÄ‡∏™‡∏µ‡∏¢,4:‡∏°‡∏≤‡∏£‡∏î‡∏≤‡πÄ‡∏™‡∏µ‡∏¢,5:‡∏≠‡∏∑‡πà‡∏ô‡πÜ]',
     ['1', '2', '3','4','5'])
st.write('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ ',options4)

options5 = st.multiselect(
     '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ö‡∏¥‡∏î‡∏≤ [1:‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏õ.6, 2:‡∏õ.6, 3:‡∏°.3,4:‡∏°.6, 5:‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ, 6:‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ]',
     ['1', '2', '3','4','5','6'])
st.write('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ ', options5)

options6 = st.multiselect(
     '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏°‡∏≤‡∏£‡∏î‡∏≤ [1:‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏õ.6, 2:‡∏õ.6, 3:‡∏°.3,4:‡∏°.6, 5:‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ, 6:‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ]',
     ['1', '2', '3','4','5','6'])
st.write('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ ', options6)

options7 = st.multiselect(
     '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö [1:‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà, 2:‡∏û‡πà‡∏≠, 3:‡πÅ‡∏°‡πà, 4:‡∏ç‡∏≤‡∏ï‡∏¥, 5:‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á, 6:‡∏≠‡∏∑‡πà‡∏ô‡πÜ]',
    ['1', '2', '3','4','5','6']) 
st.write('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ ', options7)

options8 = st.multiselect(
     '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß [1:‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 10000, 2:10001-15000, 3:15001-30000,4:30001-50000, 5:‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 50000]',
    ['1', '2', '3','4','5'])  
st.write('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ ', options8)

html_25="""
<div style="background-color:coral;padding:15px;border-radius:15px 15px 15px 15px;border-style:'solid';border-color:black">
<center><h4>üéâ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô üéâ</h4>      
</center></div>
"""
st.markdown(html_25,unsafe_allow_html=True)
#st.write(f'{options1} xxx{options2} xxx{options3}')
#if st.button("‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô"): 
if options1 !=[] or options2!=[] or options3 !=[] or options4 !=[] or options5 !=[]or options6 !=[] or options7 !=[]or options8 !=[] :
    
    #------- Ai ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 1
    loaded_model = pickle.load(open('./data/model/trained_model.sav', 'rb'))
    input_data =  (7,	1,	2,	1,	2,	2,	3,	1	)
    # changing the input_data to numpy array
    input_data_as_numpy_array = np.asarray(input_data)
    # reshape the array as we are predicting for one instance
    input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
    prediction = loaded_model.predict(input_data_reshaped)
    st.write(prediction)
    if(prediction[0]==1):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô")
        ai1='‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'
    elif (prediction[0]==2):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡πà‡∏≤‡∏ô")
        ai1='‡∏ú‡πà‡∏≤‡∏ô'
    else:
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏î‡∏µ‡∏°‡∏≤‡∏Å")
        ai1='‡∏î‡∏µ‡∏°‡∏≤‡∏Å'
    
    #------- Ai ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 2
    loaded_model = pickle.load(open('./data/model/trained_model.sav', 'rb'))
    input_data =  (7,	1,	2,	1,	2,	2,	3,	1	)
    # changing the input_data to numpy array
    input_data_as_numpy_array = np.asarray(input_data)
    # reshape the array as we are predicting for one instance
    input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
    prediction = loaded_model.predict(input_data_reshaped)
    st.write(prediction)
    if(prediction[0]==1):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 2 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô")
        ai2='‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'
    elif (prediction[0]==2):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 2 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡πà‡∏≤‡∏ô")
        ai2='‡∏ú‡πà‡∏≤‡∏ô'
    else:
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 2 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏î‡∏µ‡∏°‡∏≤‡∏Å")
        ai2='‡∏î‡∏µ‡∏°‡∏≤‡∏Å'

    #------- Ai ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 3
    loaded_model = pickle.load(open('./data/model/trained_model.sav', 'rb'))
    input_data =  (7,	1,	2,	1,	2,	2,	3,	1	)
    # changing the input_data to numpy array
    input_data_as_numpy_array = np.asarray(input_data)
    # reshape the array as we are predicting for one instance
    input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
    prediction = loaded_model.predict(input_data_reshaped)
    st.write(prediction)
    if(prediction[0]==1):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 3 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô")
        ai3='‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'
    elif (prediction[0]==2):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 3 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡πà‡∏≤‡∏ô")
        ai3='‡∏ú‡πà‡∏≤‡∏ô'
    else:
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 3 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏î‡∏µ‡∏°‡∏≤‡∏Å")
        ai3='‡∏î‡∏µ‡∏°‡∏≤‡∏Å'

    #------- Ai ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 4
    loaded_model = pickle.load(open('./data/model/trained_model.sav', 'rb'))
    input_data =  (7,	1,	2,	1,	2,	2,	3,	1	)
    # changing the input_data to numpy array
    input_data_as_numpy_array = np.asarray(input_data)
    # reshape the array as we are predicting for one instance
    input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
    prediction = loaded_model.predict(input_data_reshaped)
    st.write(prediction)
    if(prediction[0]==1):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 4 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô")
        ai4='‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'
    elif (prediction[0]==2):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 4 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡πà‡∏≤‡∏ô")
        ai4='‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'
    else:
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 4 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏î‡∏µ‡∏°‡∏≤‡∏Å")
        ai4='‡∏î‡∏µ‡∏°‡∏≤‡∏Å'
    
    #------- Ai ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 5
    loaded_model = pickle.load(open('./data/model/trained_model.sav', 'rb'))
    input_data =  (7,	1,	2,	1,	2,	2,	3,	1	)
    # changing the input_data to numpy array
    input_data_as_numpy_array = np.asarray(input_data)
    # reshape the array as we are predicting for one instance
    input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
    prediction = loaded_model.predict(input_data_reshaped)
    st.write(prediction)
    if(prediction[0]==1):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 5 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô")
        ai5='‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'
    elif (prediction[0]==2):
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 5 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡πà‡∏≤‡∏ô")
        ai5='‡∏ú‡πà‡∏≤‡∏ô'
    else:
        st.write("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡∏£‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà 5 ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏î‡∏µ‡∏°‡∏≤‡∏Å")
        ai5='‡∏î‡∏µ‡∏°‡∏≤‡∏Å'

    html_27="""
<div style="background-color:#EE9513;padding:15px;border-radius:15px 15px 15px 15px;border-style:'solid';border-color:black">
<h5>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ñ‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤ 1</h5>
</div>
"""
    st.markdown(html_27,unsafe_allow_html=True)
    st.markdown("")
    df1 = pd.DataFrame({'‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà1':ai1,'‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà2':ai2,'‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà3':ai3,'‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà4':ai4,'‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà5':ai5},index=(0,1))
    dt1=df1.head(1)
    st.dataframe(dt1)
    radar_chart(prediction[0],prediction[0],prediction[0],prediction[0],prediction[0])

else: 

    html_26 ="""
<div style=""<center><br> ****** <br> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏î‡πâ‡∏≤‡∏ô AI ‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• 5 ‡∏î‡πâ‡∏≤‡∏ô ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö<br>‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÑ‡∏î‡πâ </center></div>
"""
    st.markdown(html_26,unsafe_allow_html=True)
